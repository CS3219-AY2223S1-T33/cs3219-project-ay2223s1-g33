/* eslint-disable */
// @generated by protobuf-ts 2.8.0 with parameter server_grpc1,client_grpc1,eslint_disable,long_type_number
// @generated from protobuf file "collab-service.proto" (package "collaboration_service", syntax proto3)
// tslint:disable
import { VerifyRoomResponse } from "./collab-service";
import { VerifyRoomRequest } from "./collab-service";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service collaboration_service.CollabService
 */
export interface ICollabService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: VerifyRoom(collaboration_service.VerifyRoomRequest) returns (collaboration_service.VerifyRoomResponse);
     */
    verifyRoom: grpc.handleUnaryCall<VerifyRoomRequest, VerifyRoomResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service collaboration_service.CollabService.
 *
 * Usage: Implement the interface ICollabService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: ICollabService = ...
 * server.addService(collabServiceDefinition, service);
 * ```
 */
export const collabServiceDefinition: grpc.ServiceDefinition<ICollabService> = {
    verifyRoom: {
        path: "/collaboration_service.CollabService/VerifyRoom",
        originalName: "VerifyRoom",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => VerifyRoomResponse.fromBinary(bytes),
        requestDeserialize: bytes => VerifyRoomRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(VerifyRoomResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(VerifyRoomRequest.toBinary(value))
    }
};
