/* eslint-disable */
// @generated by protobuf-ts 2.8.0 with parameter server_grpc1,client_grpc1,eslint_disable,long_type_number
// @generated from protobuf file "user-service.proto" (package "user_service", syntax proto3)
// tslint:disable
import { GetUserProfileResponse } from "./user-service";
import { GetUserProfileRequest } from "./user-service";
import { LogoutResponse } from "./user-service";
import { LogoutRequest } from "./user-service";
import { RegisterResponse } from "./user-service";
import { RegisterRequest } from "./user-service";
import { LoginResponse } from "./user-service";
import { LoginRequest } from "./user-service";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service user_service.UserService
 */
export interface IUserService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: Login(user_service.LoginRequest) returns (user_service.LoginResponse);
     */
    login: grpc.handleUnaryCall<LoginRequest, LoginResponse>;
    /**
     * @generated from protobuf rpc: Register(user_service.RegisterRequest) returns (user_service.RegisterResponse);
     */
    register: grpc.handleUnaryCall<RegisterRequest, RegisterResponse>;
    /**
     * @generated from protobuf rpc: Logout(user_service.LogoutRequest) returns (user_service.LogoutResponse);
     */
    logout: grpc.handleUnaryCall<LogoutRequest, LogoutResponse>;
    /**
     * @generated from protobuf rpc: GetUserProfile(user_service.GetUserProfileRequest) returns (user_service.GetUserProfileResponse);
     */
    getUserProfile: grpc.handleUnaryCall<GetUserProfileRequest, GetUserProfileResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service user_service.UserService.
 *
 * Usage: Implement the interface IUserService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IUserService = ...
 * server.addService(userServiceDefinition, service);
 * ```
 */
export const userServiceDefinition: grpc.ServiceDefinition<IUserService> = {
    login: {
        path: "/user_service.UserService/Login",
        originalName: "Login",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => LoginResponse.fromBinary(bytes),
        requestDeserialize: bytes => LoginRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(LoginResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(LoginRequest.toBinary(value))
    },
    register: {
        path: "/user_service.UserService/Register",
        originalName: "Register",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => RegisterResponse.fromBinary(bytes),
        requestDeserialize: bytes => RegisterRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(RegisterResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(RegisterRequest.toBinary(value))
    },
    logout: {
        path: "/user_service.UserService/Logout",
        originalName: "Logout",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => LogoutResponse.fromBinary(bytes),
        requestDeserialize: bytes => LogoutRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(LogoutResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(LogoutRequest.toBinary(value))
    },
    getUserProfile: {
        path: "/user_service.UserService/GetUserProfile",
        originalName: "GetUserProfile",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetUserProfileResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetUserProfileRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetUserProfileResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetUserProfileRequest.toBinary(value))
    }
};
