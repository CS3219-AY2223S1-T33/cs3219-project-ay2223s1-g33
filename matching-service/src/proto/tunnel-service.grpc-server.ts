/* eslint-disable */
// @generated by protobuf-ts 2.8.0 with parameter server_grpc1,client_grpc1,eslint_disable,long_type_number
// @generated from protobuf file "tunnel-service.proto" (package "tunnel_service", syntax proto3)
// tslint:disable
import { TunnelServiceResponse } from "./tunnel-service";
import { TunnelServiceRequest } from "./tunnel-service";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service tunnel_service.TunnelService
 */
export interface ITunnelService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: OpenStream(stream tunnel_service.TunnelServiceRequest) returns (stream tunnel_service.TunnelServiceResponse);
     */
    openStream: grpc.handleBidiStreamingCall<TunnelServiceRequest, TunnelServiceResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service tunnel_service.TunnelService.
 *
 * Usage: Implement the interface ITunnelService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: ITunnelService = ...
 * server.addService(tunnelServiceDefinition, service);
 * ```
 */
export const tunnelServiceDefinition: grpc.ServiceDefinition<ITunnelService> = {
    openStream: {
        path: "/tunnel_service.TunnelService/OpenStream",
        originalName: "OpenStream",
        requestStream: true,
        responseStream: true,
        responseDeserialize: bytes => TunnelServiceResponse.fromBinary(bytes),
        requestDeserialize: bytes => TunnelServiceRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(TunnelServiceResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(TunnelServiceRequest.toBinary(value))
    }
};
