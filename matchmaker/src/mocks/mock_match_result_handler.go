// Code generated by MockGen. DO NOT EDIT.
// Source: cs3219-project-ay2223s1-g33/matchmaker/worker (interfaces: MatchResultHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	common "cs3219-project-ay2223s1-g33/matchmaker/common"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMatchResultHandler is a mock of MatchResultHandler interface.
type MockMatchResultHandler struct {
	ctrl     *gomock.Controller
	recorder *MockMatchResultHandlerMockRecorder
}

// MockMatchResultHandlerMockRecorder is the mock recorder for MockMatchResultHandler.
type MockMatchResultHandlerMockRecorder struct {
	mock *MockMatchResultHandler
}

// NewMockMatchResultHandler creates a new mock instance.
func NewMockMatchResultHandler(ctrl *gomock.Controller) *MockMatchResultHandler {
	mock := &MockMatchResultHandler{ctrl: ctrl}
	mock.recorder = &MockMatchResultHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMatchResultHandler) EXPECT() *MockMatchResultHandlerMockRecorder {
	return m.recorder
}

// HandleMatches mocks base method.
func (m *MockMatchResultHandler) HandleMatches(arg0 []*common.QueueItemsMatch) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleMatches", arg0)
}

// HandleMatches indicates an expected call of HandleMatches.
func (mr *MockMatchResultHandlerMockRecorder) HandleMatches(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleMatches", reflect.TypeOf((*MockMatchResultHandler)(nil).HandleMatches), arg0)
}
