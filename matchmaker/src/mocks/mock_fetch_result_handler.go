// Code generated by MockGen. DO NOT EDIT.
// Source: cs3219-project-ay2223s1-g33/matchmaker/worker (interfaces: FetchResultHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	common "cs3219-project-ay2223s1-g33/matchmaker/common"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFetchResultHandler is a mock of FetchResultHandler interface.
type MockFetchResultHandler struct {
	ctrl     *gomock.Controller
	recorder *MockFetchResultHandlerMockRecorder
}

// MockFetchResultHandlerMockRecorder is the mock recorder for MockFetchResultHandler.
type MockFetchResultHandlerMockRecorder struct {
	mock *MockFetchResultHandler
}

// NewMockFetchResultHandler creates a new mock instance.
func NewMockFetchResultHandler(ctrl *gomock.Controller) *MockFetchResultHandler {
	mock := &MockFetchResultHandler{ctrl: ctrl}
	mock.recorder = &MockFetchResultHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFetchResultHandler) EXPECT() *MockFetchResultHandlerMockRecorder {
	return m.recorder
}

// HandleQueueItems mocks base method.
func (m *MockFetchResultHandler) HandleQueueItems(arg0 []*common.QueueItem) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleQueueItems", arg0)
}

// HandleQueueItems indicates an expected call of HandleQueueItems.
func (mr *MockFetchResultHandlerMockRecorder) HandleQueueItems(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleQueueItems", reflect.TypeOf((*MockFetchResultHandler)(nil).HandleQueueItems), arg0)
}
