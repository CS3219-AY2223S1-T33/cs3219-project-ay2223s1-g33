syntax = "proto3";

package user_service;
option go_package = "cs3219-project-ay2223s1-g33/proto";

import "types.proto";

enum LoginErrorCode {
  LOGIN_ERROR_NONE = 0;
  LOGIN_ERROR_INVALID_CREDENTIALS = 1;
  LOGIN_ERROR_DISABLED_ACCOUNT = 2;
  LOGIN_ERROR_BAD_REQUEST = 100;
  LOGIN_ERROR_INTERNAL_ERROR = 101;
}

enum RegisterErrorCode {
  REGISTER_ERROR_NONE = 0;
  REGISTER_ERROR_USERNAME_EXISTS = 1;
  REGISTER_ERROR_BAD_REQUEST = 100;
  REGISTER_ERROR_INTERNAL_ERROR = 101;
}

enum LogoutErrorCode {
  LOGOUT_ERROR_NONE = 0;
  LOGOUT_ERROR_BAD_REQUEST = 100;
  LOGOUT_ERROR_INTERNAL_ERROR = 101;
}

enum ResetPasswordErrorCode {
  RESET_PASSWORD_ERROR_NONE = 0;
  RESET_PASSWORD_ERROR_BAD_REQUEST = 100;
  RESET_PASSWORD_ERROR_INTERNAL_ERROR = 101;
}

enum ConsumeResetTokenErrorCode {
  CONSUME_RESET_TOKEN_ERROR_NONE = 0;
  CONSUME_RESET_TOKEN_ERROR_BAD_REQUEST = 100;
  CONSUME_RESET_TOKEN_ERROR_INTERNAL_ERROR = 101;
}

enum ChangeNicknameErrorCode {
  CHANGE_NICKNAME_ERROR_NONE = 0;
  CHANGE_NICKNAME_ERROR_BAD_REQUEST = 100;
  CHANGE_NICKNAME_ERROR_INTERNAL_ERROR = 101;
}

enum ChangePasswordErrorCode {
  CHANGE_PASSWORD_ERROR_NONE = 0;
  CHANGE_PASSWORD_ERROR_BAD_REQUEST = 100;
  CHANGE_PASSWORD_ERROR_INTERNAL_ERROR = 101;
}

message UserCredentials {
  string username = 1;
  string password = 2;
}

message LoginRequest {
  UserCredentials credentials = 1;
}

message LoginResponse {
  common.User user = 1;
  LoginErrorCode error_code = 2;
  string error_message = 3;
}

message RegisterRequest {
  UserCredentials credentials = 1;
  string nickname = 2;
}

message RegisterResponse {
  RegisterErrorCode error_code = 1;
  string error_message = 2;
}

message LogoutRequest {
}

message LogoutResponse {
  LogoutErrorCode error_code = 1;
  string error_message = 2;
}

message GetUserProfileRequest {
}

message GetUserProfileResponse {
  common.User user = 1;
  string error_message = 2;
}

message ResetPasswordRequest {
  string username = 1;
}

message ResetPasswordResponse {
  ResetPasswordErrorCode error_code = 1;
  string error_message = 2;
}

message ConsumeResetTokenRequest {
  string token = 1;
  string new_password = 2;
}

message ConsumeResetTokenResponse {
  ConsumeResetTokenErrorCode error_code = 1;
  string error_message = 2;
}

message ChangeNicknameRequest {
  string new_nickname = 1;
}

message ChangeNicknameResponse {
  ChangeNicknameErrorCode error_code = 1;
  string error_message = 2;
}

message ChangePasswordRequest {
  string new_password = 1;
}

message ChangePasswordResponse {
  ChangePasswordErrorCode error_code = 1;
  string error_message = 2;
}

service UserService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
  rpc ConsumeResetToken(ConsumeResetTokenRequest) returns (ConsumeResetTokenResponse);
  rpc ChangeNickname(ChangeNicknameRequest) returns (ChangeNicknameResponse);
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);
}
