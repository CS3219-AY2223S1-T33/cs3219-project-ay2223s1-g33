syntax = "proto3";

package history_crud_service;
option go_package = "cs3219-project-ay2223s1-g33/proto";

import "types.proto";

message GetAttemptRequest {
  uint64 attempt_id = 1;
  string username = 2;
}

message GetAttemptResponse {
  common.HistoryAttempt attempt = 1;
  string error_message = 2;
}

message GetAttemptsRequest {
  int32 limit = 1;
  int32 offset = 2;

  uint64 user_id = 3;
  string username = 4;
  uint64 question_id = 5;
  bool should_omit_submission = 6;
}

message GetAttemptsResponse {
  repeated common.HistoryAttempt attempts = 1;
  int32 total_count = 2;
  string error_message = 3;
}

message CreateAttemptRequest {
  common.HistoryAttempt attempt = 1;
}

message CreateAttemptResponse {
  common.HistoryAttempt attempt = 1;
  string error_message = 2;
}

message DeleteAttemptRequest {
  uint64 attempt_id = 1;
}

message DeleteAttemptResponse {
  string error_message = 1;
}

message CreateCompletionRequest {
  common.HistoryCompletion completed = 1;
}

message CreateCompletionResponse {
  common.HistoryCompletion completed = 1;
  string error_message = 2;
}

message GetCompletionRequest {
  string username = 1;
  uint64 question_id = 2;
}

message GetCompletionResponse {
  common.HistoryCompletion completed = 1;
  string error_message = 2;
}

message DeleteCompletionRequest {
  common.HistoryCompletion completed = 1;
}

message DeleteCompletionResponse {
  string error_message = 2;
}

service HistoryCrudService {
  rpc GetAttempt(GetAttemptRequest) returns (GetAttemptResponse);
  rpc GetAttempts(GetAttemptsRequest) returns (GetAttemptsResponse);
  rpc CreateAttempt(CreateAttemptRequest) returns (CreateAttemptResponse);
  rpc DeleteAttempt(DeleteAttemptRequest) returns (DeleteAttemptResponse);
  rpc CreateCompletion(CreateCompletionRequest) returns (CreateCompletionResponse);
  rpc GetCompletion(GetCompletionRequest) returns (GetCompletionResponse);
  rpc DeleteCompletion(DeleteCompletionRequest) returns (DeleteCompletionResponse);
}
