// Code generated by MockGen. DO NOT EDIT.
// Source: cs3219-project-ay2223s1-g33/gateway/auth (interfaces: AuthAgent)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthAgent is a mock of AuthAgent interface.
type MockAuthAgent struct {
	ctrl     *gomock.Controller
	recorder *MockAuthAgentMockRecorder
}

// MockAuthAgentMockRecorder is the mock recorder for MockAuthAgent.
type MockAuthAgentMockRecorder struct {
	mock *MockAuthAgent
}

// NewMockAuthAgent creates a new mock instance.
func NewMockAuthAgent(ctrl *gomock.Controller) *MockAuthAgent {
	mock := &MockAuthAgent{ctrl: ctrl}
	mock.recorder = &MockAuthAgentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthAgent) EXPECT() *MockAuthAgentMockRecorder {
	return m.recorder
}

// Dispose mocks base method.
func (m *MockAuthAgent) Dispose() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Dispose")
}

// Dispose indicates an expected call of Dispose.
func (mr *MockAuthAgentMockRecorder) Dispose() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dispose", reflect.TypeOf((*MockAuthAgent)(nil).Dispose))
}

// ValidateToken mocks base method.
func (m *MockAuthAgent) ValidateToken(arg0, arg1 string) (string, string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockAuthAgentMockRecorder) ValidateToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockAuthAgent)(nil).ValidateToken), arg0, arg1)
}
