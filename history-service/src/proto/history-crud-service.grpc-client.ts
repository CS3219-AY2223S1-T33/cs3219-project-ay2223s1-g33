/* eslint-disable */
// @generated by protobuf-ts 2.8.0 with parameter server_grpc1,client_grpc1,eslint_disable,long_type_number
// @generated from protobuf file "history-crud-service.proto" (package "history_crud_service", syntax proto3)
// tslint:disable
import { HistoryCrudService } from "./history-crud-service";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { DeleteAttemptResponse } from "./history-crud-service";
import type { DeleteAttemptRequest } from "./history-crud-service";
import type { EditAttemptResponse } from "./history-crud-service";
import type { EditAttemptRequest } from "./history-crud-service";
import type { CreateAttemptResponse } from "./history-crud-service";
import type { CreateAttemptRequest } from "./history-crud-service";
import type { GetAttemptsResponse } from "./history-crud-service";
import type { GetAttemptsRequest } from "./history-crud-service";
import type { GetAttemptResponse } from "./history-crud-service";
import type { GetAttemptRequest } from "./history-crud-service";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service history_crud_service.HistoryCrudService
 */
export interface IHistoryCrudServiceClient {
    /**
     * @generated from protobuf rpc: GetAttempt(history_crud_service.GetAttemptRequest) returns (history_crud_service.GetAttemptResponse);
     */
    getAttempt(input: GetAttemptRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetAttemptResponse) => void): grpc.ClientUnaryCall;
    getAttempt(input: GetAttemptRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GetAttemptResponse) => void): grpc.ClientUnaryCall;
    getAttempt(input: GetAttemptRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetAttemptResponse) => void): grpc.ClientUnaryCall;
    getAttempt(input: GetAttemptRequest, callback: (err: grpc.ServiceError | null, value?: GetAttemptResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: GetAttempts(history_crud_service.GetAttemptsRequest) returns (history_crud_service.GetAttemptsResponse);
     */
    getAttempts(input: GetAttemptsRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void): grpc.ClientUnaryCall;
    getAttempts(input: GetAttemptsRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void): grpc.ClientUnaryCall;
    getAttempts(input: GetAttemptsRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void): grpc.ClientUnaryCall;
    getAttempts(input: GetAttemptsRequest, callback: (err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: CreateAttempt(history_crud_service.CreateAttemptRequest) returns (history_crud_service.CreateAttemptResponse);
     */
    createAttempt(input: CreateAttemptRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void): grpc.ClientUnaryCall;
    createAttempt(input: CreateAttemptRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void): grpc.ClientUnaryCall;
    createAttempt(input: CreateAttemptRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void): grpc.ClientUnaryCall;
    createAttempt(input: CreateAttemptRequest, callback: (err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: EditAttempt(history_crud_service.EditAttemptRequest) returns (history_crud_service.EditAttemptResponse);
     */
    editAttempt(input: EditAttemptRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: EditAttemptResponse) => void): grpc.ClientUnaryCall;
    editAttempt(input: EditAttemptRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: EditAttemptResponse) => void): grpc.ClientUnaryCall;
    editAttempt(input: EditAttemptRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: EditAttemptResponse) => void): grpc.ClientUnaryCall;
    editAttempt(input: EditAttemptRequest, callback: (err: grpc.ServiceError | null, value?: EditAttemptResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: DeleteAttempt(history_crud_service.DeleteAttemptRequest) returns (history_crud_service.DeleteAttemptResponse);
     */
    deleteAttempt(input: DeleteAttemptRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void): grpc.ClientUnaryCall;
    deleteAttempt(input: DeleteAttemptRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void): grpc.ClientUnaryCall;
    deleteAttempt(input: DeleteAttemptRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void): grpc.ClientUnaryCall;
    deleteAttempt(input: DeleteAttemptRequest, callback: (err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void): grpc.ClientUnaryCall;
}
/**
 * @generated from protobuf service history_crud_service.HistoryCrudService
 */
export class HistoryCrudServiceClient extends grpc.Client implements IHistoryCrudServiceClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: GetAttempt(history_crud_service.GetAttemptRequest) returns (history_crud_service.GetAttemptResponse);
     */
    getAttempt(input: GetAttemptRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetAttemptResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetAttemptResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GetAttemptResponse) => void)): grpc.ClientUnaryCall {
        const method = HistoryCrudService.methods[0];
        return this.makeUnaryRequest<GetAttemptRequest, GetAttemptResponse>(`/${HistoryCrudService.typeName}/${method.name}`, (value: GetAttemptRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GetAttemptResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: GetAttempts(history_crud_service.GetAttemptsRequest) returns (history_crud_service.GetAttemptsResponse);
     */
    getAttempts(input: GetAttemptsRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GetAttemptsResponse) => void)): grpc.ClientUnaryCall {
        const method = HistoryCrudService.methods[1];
        return this.makeUnaryRequest<GetAttemptsRequest, GetAttemptsResponse>(`/${HistoryCrudService.typeName}/${method.name}`, (value: GetAttemptsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GetAttemptsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: CreateAttempt(history_crud_service.CreateAttemptRequest) returns (history_crud_service.CreateAttemptResponse);
     */
    createAttempt(input: CreateAttemptRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: CreateAttemptResponse) => void)): grpc.ClientUnaryCall {
        const method = HistoryCrudService.methods[2];
        return this.makeUnaryRequest<CreateAttemptRequest, CreateAttemptResponse>(`/${HistoryCrudService.typeName}/${method.name}`, (value: CreateAttemptRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): CreateAttemptResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: EditAttempt(history_crud_service.EditAttemptRequest) returns (history_crud_service.EditAttemptResponse);
     */
    editAttempt(input: EditAttemptRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: EditAttemptResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: EditAttemptResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: EditAttemptResponse) => void)): grpc.ClientUnaryCall {
        const method = HistoryCrudService.methods[3];
        return this.makeUnaryRequest<EditAttemptRequest, EditAttemptResponse>(`/${HistoryCrudService.typeName}/${method.name}`, (value: EditAttemptRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): EditAttemptResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: DeleteAttempt(history_crud_service.DeleteAttemptRequest) returns (history_crud_service.DeleteAttemptResponse);
     */
    deleteAttempt(input: DeleteAttemptRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: DeleteAttemptResponse) => void)): grpc.ClientUnaryCall {
        const method = HistoryCrudService.methods[4];
        return this.makeUnaryRequest<DeleteAttemptRequest, DeleteAttemptResponse>(`/${HistoryCrudService.typeName}/${method.name}`, (value: DeleteAttemptRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): DeleteAttemptResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
